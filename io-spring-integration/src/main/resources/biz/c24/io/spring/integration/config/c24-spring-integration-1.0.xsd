<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.c24.biz/schema/spring-integration"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:tool="http://www.springframework.org/schema/tool"
	xmlns:integration="http://www.springframework.org/schema/integration"
	xmlns:core="http://www.c24.biz/schema/spring-core" targetNamespace="http://www.c24.biz/schema/spring-integration"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans" />
	<xsd:import namespace="http://www.springframework.org/schema/tool" />
	<xsd:import namespace="http://www.springframework.org/schema/integration"
		schemaLocation="http://www.springframework.org/schema/integration/spring-integration-2.0.xsd" />
	<xsd:import namespace="http://www.c24.biz/schema/spring-core" />

	<xsd:annotation>
		<xsd:documentation>
			Defines the configuration elements for C24 IO's
			Spring Integration support.
		</xsd:documentation>
	</xsd:annotation>

	<xsd:element name="marshalling-transformer">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					Defines an C24 IO marshalling transformer, i.e.
					a
					C24 IO Sink.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:complexContent>
				<xsd:extension base="inputOutputEndpoint">
					<xsd:attribute name="sink-factory" type="xsd:string"
						use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type type="biz.c24.io.spring.sink.SinkFactory" />
								</tool:annotation>
							</xsd:appinfo>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="output-type" use="required">
						<xsd:annotation>
							<xsd:documentation>
								The result type expected from the marshaller.
								This will be the
								payload type of the output Message.
							</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="BYTE_ARRAY" />
								<xsd:enumeration value="STRING" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="unmarshalling-transformer">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					Defines an C24 IO unmarshalling transformer, i.e.
					a C24 IO Parser.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:complexContent>
				<xsd:extension base="inputOutputEndpoint">
					<xsd:attribute name="model-ref" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type type="biz.c24.io.spring.util.C24Model" />
								</tool:annotation>
							</xsd:appinfo>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="source-factory-ref" type="xsd:string"
						use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type type="biz.c24.io.spring.source.SourceFactory" />
								</tool:annotation>
							</xsd:appinfo>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="transformer">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					Defines a C24 IO transformer.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:complexContent>
				<xsd:extension base="inputOutputEndpoint">
					<xsd:attribute name="transform-class" type="classType"
						use="required" />
					<xsd:attribute name="always-return-array" type="xsd:boolean"
						default="false" />
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="xpath-transformer">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					Defines an XPath transformer. Only accepts
					ComplexObject as the payload type.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:complexContent>
				<xsd:extension base="inputOutputEndpoint">
					<xsd:attribute name="xpath-statement" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
								The XPath statement string to be evaluated
								against the input
								Message's payload.
								Either this or
								'xpath-statement-ref' must be provided, but not both.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="xpath-statement-ref" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
								Reference to the XPathStatement instance to
								be
								evaluated against the
								input Message's payload.
								Either this or
								'xpath-expression' must be provided, but not both.
							</xsd:documentation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type type="biz.c24.io.api.data.XPathStatement" />
								</tool:annotation>
							</xsd:appinfo>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="evaluation-type" default="OBJECT_RESULT">
						<xsd:annotation>
							<xsd:documentation>
								The result type expected from the XPath
								evaluation. This will be
								the payload type of the output Message.
							</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="BOOLEAN_RESULT" />
								<xsd:enumeration value="STRING_RESULT" />
								<xsd:enumeration value="NUMBER_RESULT" />
								<xsd:enumeration value="OBJECT_RESULT" />
								<xsd:enumeration value="LIST_RESULT" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="xpath-router">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					Defines an XPath router.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:sequence>
				<!-- TODO <xsd:element ref="xpath-statement" minOccurs="0" maxOccurs="1" 
					/> -->
				<xsd:element ref="integration:poller" minOccurs="0"
					maxOccurs="1" />
				<xsd:element name="mapping" minOccurs="0" maxOccurs="unbounded">
					<xsd:complexType>
						<xsd:attribute name="value" type="xsd:string" />
						<xsd:attribute name="channel" type="xsd:string">
							<xsd:annotation>
								<xsd:appinfo>
									<tool:annotation kind="ref">
										<tool:expected-type
											type="org.springframework.integration.core.MessageChannel" />
									</tool:annotation>
								</xsd:appinfo>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="id" type="xsd:ID" />
			<xsd:attribute name="xpath-statement" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The XPath statement string to be evaluated
						against the input
						Message's payload.
						Either this or
						'xpath-statement-ref' must be provided, but not both.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="xpath-statement-ref" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Reference to the XPathStatement instance to
						be
						evaluated against the
						input Message's payload.
						Either this or
						'xpath-statement' must be provided, but not both.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="biz.c24.io.api.data.XPathStatement" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="input-channel" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type
								type="org.springframework.integration.core.MessageChannel" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="channel-resolver" type="xsd:string"
				use="optional">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type
								type="org.springframework.integration.core.ChannelResolver" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="resolution-required" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Specify whether this router should always be
						required to return at least
						one channel or name.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ignore-channel-name-resolution-failures"
				type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Specify whether a failure to resolve a channel
						name returned by this
						router should be ignored.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="default-output-channel" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type
								type="org.springframework.integration.core.MessageChannel" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="xpath-selector">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					Defines an XPath selector.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:attribute name="id" type="xsd:ID" />
			<xsd:attribute name="xpath-statement" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The XPath statement string to be evaluated
						against the input
						Message's payload.
						Either this or
						'xpath-statement-ref' must be provided, but not both.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="xpath-statement-ref" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Reference to the XPathStatement instance to
						be
						evaluated against the
						input Message's payload.
						Either this or
						'xpath-statement' must be provided, but not both.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="biz.c24.io.api.data.XPathStatement" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="evaluation-result-type" use="required">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="boolean" />
						<xsd:enumeration value="string" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="string-test-value" type="xsd:string"
				use="optional" />
		</xsd:complexType>
	</xsd:element>

	<!-- TODO <xsd:element name="validating-filter"> -->

	<!-- TODO <xsd:element name="xpath-statement"> <xsd:complexType> <xsd:annotation> 
		<xsd:documentation> Defines an XPath expression. </xsd:documentation> </xsd:annotation> 
		<xsd:sequence> <xsd:element ref="beans:map" minOccurs="0" maxOccurs="1"/> 
		</xsd:sequence> <xsd:attribute name="id" type="xsd:ID" use="optional"/> <xsd:attribute 
		name="expression" type="xsd:string" use="optional"/> <xsd:attribute name="ns-prefix" 
		type="xsd:string" use="optional"/> <xsd:attribute name="ns-uri" type="xsd:string" 
		use="optional"/> <xsd:attribute name="namespace-map" type="xsd:string" use="optional"/> 
		</xsd:complexType> </xsd:element> -->

	<xsd:element name="xpath-header-enricher">
		<xsd:annotation>
			<xsd:documentation>
				Defines a Header Enricher Message Transformer that
				evaluates XPath
				statements against the
				message payload and inserts the
				result of the evaluation into a messsage
				header.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="inputOutputEndpoint">
					<xsd:sequence minOccurs="1" maxOccurs="unbounded">
						<xsd:element type="xpathHeaderType" name="header" />
					</xsd:sequence>
					<xsd:attribute name="default-overwrite">
						<xsd:annotation>
							<xsd:documentation>
								Specify the default boolean value for whether
								to overwrite existing
								header values. This will
								only take effect
								for sub-elements that do not provide their own
								'overwrite'
								attribute. If the
								'default-overwrite' attribute is not provided,
								then the specified header values
								will NOT
								overwrite any existing
								ones with the same header names.
							</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:union memberTypes="xsd:boolean xsd:string" />
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="should-skip-nulls">
						<xsd:annotation>
							<xsd:documentation>
								Specify whether null values, such as might be
								returned from an
								expression evaluation, should be
								skipped. The
								default value is true. Set this to false if a null value
								should
								trigger removal of
								the corresponding header instead.
							</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:union memberTypes="xsd:boolean xsd:string" />
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:complexType name="xpathHeaderType">
		<xsd:annotation>
			<xsd:documentation>
				Defines an XPath statement to be configured within
				an
				&lt;xpath-header-enricher/&gt; element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>
					The name of the header to be enriched.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="xpath-statement" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
					The XPath Expression as a String. Either this or
					'xpath-statement-ref'
					must be provided, but not both.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="xpath-statement-ref" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
					The XPath Expression reference. Either this or
					'xpath-statement' must
					be provided, but not both.
				</xsd:documentation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type type="biz.c24.io.api.data.XPathStatement" />
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="evaluation-type" default="STRING_RESULT">
			<xsd:annotation>
				<xsd:documentation>
					The result type expected from the XPath
					evaluation. This will be
					the type of the header.
			</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="BOOLEAN_RESULT" />
					<xsd:enumeration value="STRING_RESULT" />
					<xsd:enumeration value="NUMBER_RESULT" />
					<xsd:enumeration value="OBJECT_RESULT" />
					<xsd:enumeration value="LIST_RESULT" />
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="overwrite">
			<xsd:annotation>
				<xsd:documentation>
					Boolean value to indicate whether this header
					value should overwrite an
					existing header value
					for the same name if
					already present on the input Message.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:union memberTypes="xsd:boolean xsd:string" />
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="inputOutputEndpoint">
		<xsd:sequence>
			<xsd:element ref="integration:poller" minOccurs="0"
				maxOccurs="1" />
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" />
		<xsd:attribute name="input-channel" type="xsd:string">
			<xsd:annotation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type
							type="org.springframework.integration.core.MessageChannel" />
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="output-channel" type="xsd:string">
			<xsd:annotation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type
							type="org.springframework.integration.core.MessageChannel" />
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="paramType">
		<xsd:attribute name="name" type="xsd:string" use="required" />
		<xsd:attribute name="expression" type="xsd:string" use="optional" />
		<xsd:attribute name="value" type="xsd:string" use="optional" />
	</xsd:complexType>

	<xsd:simpleType name="classType">
		<xsd:annotation>
			<xsd:appinfo>
				<tool:annotation kind="direct">
					<tool:expected-type type="java.lang.Class" />
				</tool:annotation>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:string" />
	</xsd:simpleType>

	<xsd:simpleType name="packageType">
		<xsd:annotation>
			<xsd:appinfo>
				<tool:annotation kind="direct">
					<tool:expected-type type="java.lang.Package" />
				</tool:annotation>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:union memberTypes="xsd:string" />
	</xsd:simpleType>

</xsd:schema>